# 农夫过河
"""
一个农夫在河边带了一匹狼、一只羊和一棵白菜，他需要把这三样东西用船带到河的对岸。
然而，这艘船只能容下农夫本人和另外一样东西。如果农夫不在场的话，狼会吃掉羊，羊也会吃掉白菜。
请编程为农夫解决这个过河问题。
"""
# 这个题目我曾经做过另一个版本的。书上有一点设计的比较巧妙，就是把问题抽象为数组表达。
# a[][]，一个二维数组，第一维表示步数，第二维表示具体对象，数组的值代表在河的哪边。a[n][0]代表狼第n步的位置
# a[n][1]代表羊在第n步的位置，a[n][2]代表白菜在第n步的位置，a[n][3]代表农夫在第n步的位置。
# 题目意思就是：要把位置从[[0],[0],[0],[0]]变成[[1]，[1]，[1]，[1]]

# 第n步的走法
def solve(n):
    if (arr[n][0]+arr[n][1]+arr[n][2]+arr[n][3]==4):
        print("success")
        print(arr)
        return 
    for i in range(n):
        if arr[i] == arr[n]:
            #print("重复了")
            return
    if (arr[n][1]!=arr[n][3] and (arr[n][0]==arr[n][1] or arr[n][1]==arr[n][2])):
        #print("something will be eaten")
        return 
    # 农夫只能选择自己过河或者带一样东西走
    for i in range(-1,3):
        # -1代表什么都不带，0代表带狼，1代表带羊，2代表带菜
        arr[n+1] = arr[n][:] # 复制过去
        # 农夫的变化，如果之前是0，现在变成1，如果之前是1，现在变成0
        arr[n+1][3] = 1-arr[n+1][3]

        if i == -1:
            # 只有农夫一个人走
            solve(n+1)
        elif arr[n][i]==arr[n][3]: # 代表当前动物和农夫在同一侧
            arr[n+1][i] = arr[n+1][3] # 带走
            solve(n+1)

if __name__ == '__main__':
    arr = [[0]*4 for i in range(15)]
    solve(0)
